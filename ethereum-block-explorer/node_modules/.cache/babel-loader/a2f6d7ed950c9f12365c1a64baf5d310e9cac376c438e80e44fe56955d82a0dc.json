{"ast":null,"code":"import { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport './App.css';\n\n// Refer to the README doc for more information about using API\n// keys in client-side code. You should never do this in production\n// level code.\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET\n};\n\n// // In this week's lessons we used ethers.js. Here we are using the\n// // Alchemy SDK is an umbrella library with several different packages.\n// //\n// // You can read more about the packages here:\n// //   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\n// const alchemy = new Alchemy(settings);\n\n// function App() {\n//   const [blockNumber, setBlockNumber] = useState();\n\n//   useEffect(() => {\n//     async function getBlockNumber() {\n//       setBlockNumber(await alchemy.core.getBlockNumber());\n//     }\n\n//     getBlockNumber();\n//   });\n\n//   return <div className=\"App\">Block Number: {blockNumber}</div>;\n// }\n\n// export default App;","map":{"version":3,"names":["Alchemy","Network","useEffect","useState","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET"],"sources":["/Users/benjaminshmulevsky/repos/alchemyu/ethereum-block-explorer/src/App.js"],"sourcesContent":["import { Alchemy, Network } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\n\nimport './App.css';\n\n// Refer to the README doc for more information about using API\n// keys in client-side code. You should never do this in production\n// level code.\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET,\n};\n\n\n// // In this week's lessons we used ethers.js. Here we are using the\n// // Alchemy SDK is an umbrella library with several different packages.\n// //\n// // You can read more about the packages here:\n// //   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\n// const alchemy = new Alchemy(settings);\n\n// function App() {\n//   const [blockNumber, setBlockNumber] = useState();\n\n//   useEffect(() => {\n//     async function getBlockNumber() {\n//       setBlockNumber(await alchemy.core.getBlockNumber());\n//     }\n\n//     getBlockNumber();\n//   });\n\n//   return <div className=\"App\">Block Number: {blockNumber}</div>;\n// }\n\n// export default App;\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,aAAa;AAC9C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,WAAW;;AAElB;AACA;AACA;AACA,MAAMC,QAAQ,GAAG;EACfC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAC7CC,OAAO,EAAER,OAAO,CAACS;AACnB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}