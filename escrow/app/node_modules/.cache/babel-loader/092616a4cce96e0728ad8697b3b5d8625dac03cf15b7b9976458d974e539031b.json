{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminshmulevsky/repos/alchemyu/escrow/app/src/App.js\",\n  _s = $RefreshSig$();\nimport { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport deploy from './deploy';\nimport Escrow from './Escrow';\nimport EscrowABI from './artifacts/contracts/Escrow.sol/Escrow.json';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\nexport async function approve(escrowContract, signer) {\n  const approveTxn = await escrowContract.connect(signer).approve();\n  await approveTxn.wait();\n}\nfunction App() {\n  _s();\n  const [escrows, setEscrows] = useState([]);\n  const [account, setAccount] = useState();\n  const [signer, setSigner] = useState();\n  const [selectedContract, setSelectedContract] = useState(null);\n  const [lastDeposit, setLastDeposit] = useState(Date.now());\n  useEffect(() => {\n    async function getAccounts() {\n      const accounts = await provider.send('eth_requestAccounts', []);\n      setAccount(accounts[0]);\n      setSigner(provider.getSigner());\n    }\n    getAccounts();\n  }, [account]);\n  async function newContract() {\n    const beneficiary = document.getElementById('beneficiary').value;\n    const arbiter = document.getElementById('arbiter').value;\n    const valueInEther = document.getElementById('eth').value;\n    const value = ethers.utils.parseEther(valueInEther);\n    const escrowContract = await deploy(signer, arbiter, beneficiary, value);\n    const escrow = {\n      address: escrowContract.address,\n      arbiter,\n      beneficiary,\n      value: value.toString(),\n      contract: escrowContract,\n      handleApprove: async () => {\n        escrowContract.on('Approved', () => {\n          document.getElementById(escrowContract.address).className = 'complete';\n          document.getElementById(escrowContract.address).innerText = \"âœ“ It's been approved!\";\n        });\n        await approve(escrowContract, signer);\n      }\n    };\n    setEscrows([...escrows, escrow]);\n  }\n  function handleDeposit() {\n    const depositAmount = document.getElementById('depositAmount').value;\n    const selectedContractAddress = document.getElementById('contractSelect').value;\n    depositToContract(selectedContractAddress, depositAmount);\n  }\n  async function depositToContract(contractAddress, amountInEther) {\n    try {\n      const amountInWei = ethers.utils.parseEther(amountInEther);\n      const escrowContract = new ethers.Contract(contractAddress, EscrowABI.abi, signer);\n      const tx = await escrowContract.deposit({\n        value: amountInWei\n      });\n      await tx.wait();\n      setLastDeposit(Date.now()); // Update lastDeposit after a successful deposit\n      console.log(`Deposited ${amountInEther} ETH to contract at address ${contractAddress}`);\n    } catch (error) {\n      console.error('Error making a deposit:', error);\n    }\n  }\n  function handleContractSelect(contractAddress) {\n    setSelectedContract(contractAddress);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contract\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" New Contract \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Arbiter Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"arbiter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Beneficiary Address\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"beneficiary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Deposit Amount (in ETH)\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"eth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button\",\n        id: \"deploy\",\n        onClick: e => {\n          e.preventDefault();\n          newContract();\n        },\n        children: \"Deploy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Make a Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"contractSelect\",\n        children: escrows.map((escrow, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: escrow.address,\n          children: [\"Contract \", index + 1, \" - \", escrow.address]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"depositAmount\",\n          placeholder: \"Amount in Ether\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleDeposit,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"existing-contracts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Existing Contracts \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"container\",\n        children: escrows.map(escrow => {\n          return /*#__PURE__*/_jsxDEV(Escrow, {\n            escrowContract: escrow.contract,\n            ...escrow,\n            lastDeposit: lastDeposit,\n            isSelected: escrow.address === selectedContract,\n            handleSelect: () => handleContractSelect(escrow.address)\n          }, escrow.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"2horZGlV9ImBlPfXl0D+U3x0TLw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","useEffect","useState","deploy","Escrow","EscrowABI","provider","providers","Web3Provider","window","ethereum","approve","escrowContract","signer","approveTxn","connect","wait","App","escrows","setEscrows","account","setAccount","setSigner","selectedContract","setSelectedContract","lastDeposit","setLastDeposit","Date","now","getAccounts","accounts","send","getSigner","newContract","beneficiary","document","getElementById","value","arbiter","valueInEther","utils","parseEther","escrow","address","toString","contract","handleApprove","on","className","innerText","handleDeposit","depositAmount","selectedContractAddress","depositToContract","contractAddress","amountInEther","amountInWei","Contract","abi","tx","deposit","console","log","error","handleContractSelect","e","preventDefault","map","index"],"sources":["/Users/benjaminshmulevsky/repos/alchemyu/escrow/app/src/App.js"],"sourcesContent":["import { ethers } from 'ethers';\nimport { useEffect, useState } from 'react';\nimport deploy from './deploy';\nimport Escrow from './Escrow';\nimport EscrowABI from './artifacts/contracts/Escrow.sol/Escrow.json'\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\nexport async function approve(escrowContract, signer) {\n  const approveTxn = await escrowContract.connect(signer).approve();\n  await approveTxn.wait();\n}\n\nfunction App() {\n  const [escrows, setEscrows] = useState([]);\n  const [account, setAccount] = useState();\n  const [signer, setSigner] = useState();\n  const [selectedContract, setSelectedContract] = useState(null);\n  const [lastDeposit, setLastDeposit] = useState(Date.now());\n\n  useEffect(() => {\n    async function getAccounts() {\n      const accounts = await provider.send('eth_requestAccounts', []);\n\n      setAccount(accounts[0]);\n      setSigner(provider.getSigner());\n    }\n\n    getAccounts();\n  }, [account]);\n\n  async function newContract() {\n    const beneficiary = document.getElementById('beneficiary').value;\n    const arbiter = document.getElementById('arbiter').value;\n    const valueInEther = document.getElementById('eth').value;\n    const value = ethers.utils.parseEther(valueInEther);\n    const escrowContract = await deploy(signer, arbiter, beneficiary, value);\n\n    const escrow = {\n      address: escrowContract.address,\n      arbiter,\n      beneficiary,\n      value: value.toString(),\n      contract: escrowContract,\n      handleApprove: async () => {\n        escrowContract.on('Approved', () => {\n          document.getElementById(escrowContract.address).className = 'complete';\n          document.getElementById(escrowContract.address).innerText = \"âœ“ It's been approved!\";\n        });\n\n        await approve(escrowContract, signer);\n      },\n    };\n\n    setEscrows([...escrows, escrow]);\n  }\n\n  function handleDeposit() {\n    const depositAmount = document.getElementById('depositAmount').value;\n    const selectedContractAddress = document.getElementById('contractSelect').value;\n    depositToContract(selectedContractAddress, depositAmount);\n  }\n\n  async function depositToContract(contractAddress, amountInEther) {\n    try {\n      const amountInWei = ethers.utils.parseEther(amountInEther);\n      const escrowContract = new ethers.Contract(contractAddress, EscrowABI.abi, signer);\n  \n      const tx = await escrowContract.deposit({ value: amountInWei });\n      await tx.wait();\n      \n      setLastDeposit(Date.now());  // Update lastDeposit after a successful deposit\n      console.log(`Deposited ${amountInEther} ETH to contract at address ${contractAddress}`);\n    } catch (error) {\n      console.error('Error making a deposit:', error);\n    }\n  }\n\n  function handleContractSelect(contractAddress) {\n    setSelectedContract(contractAddress);\n  }\n\n  return (\n    <>\n      <div className=\"contract\">\n        <h1> New Contract </h1>\n        <label>\n          Arbiter Address\n          <input type=\"text\" id=\"arbiter\" />\n        </label>\n        <label>\n          Beneficiary Address\n          <input type=\"text\" id=\"beneficiary\" />\n        </label>\n        <label>\n          Deposit Amount (in ETH)\n          <input type=\"text\" id=\"eth\" />\n        </label>\n        <div\n          className=\"button\"\n          id=\"deploy\"\n          onClick={(e) => {\n            e.preventDefault();\n            newContract();\n          }}\n        >\n          Deploy\n        </div>\n      </div>\n      \n      <div className=\"deposit\">\n        <h1>Make a Deposit</h1>\n        <select id=\"contractSelect\">\n          {escrows.map((escrow, index) => (\n            <option key={index} value={escrow.address}>\n              Contract {index + 1} - {escrow.address}\n            </option>\n          ))}\n        </select>\n        <div>\n          <input type=\"text\" id=\"depositAmount\" placeholder=\"Amount in Ether\"/>\n        </div>\n        <div>\n          <button className=\"button\" onClick={handleDeposit}>Deposit</button>\n        </div>\n      </div>\n\n      <div className=\"existing-contracts\">\n      <h1> Existing Contracts </h1>\n      <div id=\"container\">\n        {escrows.map((escrow) => {\n          return (\n            <Escrow \n              key={escrow.address} \n              escrowContract={escrow.contract}\n              {...escrow}\n              lastDeposit={lastDeposit}\n              isSelected={escrow.address === selectedContract}\n              handleSelect={() => handleContractSelect(escrow.address)}\n            />\n          );\n        })}\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}